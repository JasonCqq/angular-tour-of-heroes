{"ast":null,"code":"var _class;\nimport { HEROES } from \"./mock-heroes\";\nimport { of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class HeroService {\n  getHeroes() {\n    return this.http.get(this.heroesUrl);\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    if (!hero) {\n      throw new Error(\"Hero not found\");\n    }\n    return of(hero);\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  constructor(messageService, http) {\n    this.messageService = messageService;\n    this.http = http;\n    this.heroesUrl = \"api/heroes\"; // api\n  }\n}\n_class = HeroService;\n_class.ɵfac = function HeroService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.MessageService), i0.ɵɵinject(i2.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["HEROES","of","HeroService","getHeroes","http","get","heroesUrl","getHero","id","hero","find","h","messageService","add","Error","log","message","constructor","i0","ɵɵinject","i1","MessageService","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/jason21715/Desktop/angular-tour-of-heroes/src/app/hero.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Hero } from \"./hero\";\nimport { HEROES } from \"./mock-heroes\";\nimport { Observable, of } from \"rxjs\";\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HeroService {\n  private heroesUrl = \"api/heroes\"; // api\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl);\n  }\n  getHero(id: number): Observable<Hero> {\n    const hero = HEROES.find((h) => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    if (!hero) {\n      throw new Error(\"Hero not found\");\n    }\n    return of(hero);\n  }\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  constructor(\n    private messageService: MessageService,\n    private http: HttpClient,\n  ) {}\n}\n"],"mappings":";AAEA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;;;;AAOrC,OAAM,MAAOC,WAAW;EAGtBC,SAASA,CAAA;IACP,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAS,IAAI,CAACC,SAAS,CAAC;EAC9C;EACAC,OAAOA,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAGT,MAAM,CAACU,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC5C,IAAI,CAACI,cAAc,CAACC,GAAG,CAAC,gCAAgCL,EAAE,EAAE,CAAC;IAC7D,IAAI,CAACC,IAAI,EAAE;MACT,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;;IAEnC,OAAOb,EAAE,CAACQ,IAAI,CAAC;EACjB;EACQM,GAAGA,CAACC,OAAe;IACzB,IAAI,CAACJ,cAAc,CAACC,GAAG,CAAC,gBAAgBG,OAAO,EAAE,CAAC;EACpD;EAEAC,YACUL,cAA8B,EAC9BR,IAAgB;IADhB,KAAAQ,cAAc,GAAdA,cAAc;IACd,KAAAR,IAAI,GAAJA,IAAI;IAnBN,KAAAE,SAAS,GAAG,YAAY,CAAC,CAAC;EAoB/B;;SArBQJ,WAAW;;mBAAXA,MAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;SAAXrB,MAAW;EAAAsB,OAAA,EAAXtB,MAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}